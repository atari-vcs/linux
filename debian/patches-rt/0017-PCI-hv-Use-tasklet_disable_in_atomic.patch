From: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date: Thu, 28 Jan 2021 16:59:34 +0100
Subject: [PATCH 17/19] PCI: hv: Use tasklet_disable_in_atomic()
Origin: https://www.kernel.org/pub/linux/kernel/projects/rt/5.10/older/patches-5.10.17-rt32.tar.xz

The hv_compose_msi_msg() callback in irq_chip::irq_compose_msi_msg is
invoked via irq_chip_compose_msi_msg().

Possible call paths:
- mp_irqdomain_activate()
  raw_spin_lock_irqsave(&ioapic_lock,);
  ioapic_configure_entry()
  -> ioapic_setup_msg_from_msi()
     -> irq_chip_compose_msi_msg()

- tick_resume_broadcast()
  raw_spin_lock_irqsave(&tick_broadcast_lock,);
  clockevents_tick_resume()
  -> dev->tick_resume()
     -> hpet_clkevt_msi_resume()
	-> irq_chip_compose_msi_msg()

Use tasklet_disable_in_atomic() in atomic context.

Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
---
 drivers/pci/controller/pci-hyperv.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/drivers/pci/controller/pci-hyperv.c
+++ b/drivers/pci/controller/pci-hyperv.c
@@ -1458,7 +1458,7 @@ static void hv_compose_msi_msg(struct ir
 	 * Prevents hv_pci_onchannelcallback() from running concurrently
 	 * in the tasklet.
 	 */
-	tasklet_disable(&channel->callback_event);
+	tasklet_disable_in_atomic(&channel->callback_event);
 
 	/*
 	 * Since this function is called with IRQ locks held, can't
