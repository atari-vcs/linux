From: Ben Hutchings <ben@decadent.org.uk>
Date: Thu, 5 Apr 2018 18:13:52 +0200
Subject: wireless: Disable regulatory.db direct loading

Forwarded: not-needed
Bug-Debian: https://bugs.debian.org/892229

Don't complain about being unable to load regulatory.db directly.
This is expected until we generate a signing key and update
wireless-regdb to be signed with it.
---
 net/wireless/reg.c | 33 +++++++++++++++++++++++++++++++++
 1 file changed, 33 insertions(+)

diff --git a/net/wireless/reg.c b/net/wireless/reg.c
index fff9a74..216e0c5 100644
--- a/net/wireless/reg.c
+++ b/net/wireless/reg.c
@@ -483,6 +483,7 @@ static void reg_regdb_apply(struct work_struct *work)
 
 static DECLARE_WORK(reg_regdb_work, reg_regdb_apply);
 
+#if 0
 static int reg_schedule_apply(const struct ieee80211_regdomain *regdom)
 {
 	struct reg_regdb_apply_request *request;
@@ -502,6 +503,7 @@ static int reg_schedule_apply(const struct ieee80211_regdomain *regdom)
 	schedule_work(&reg_regdb_work);
 	return 0;
 }
+#endif
 
 #ifdef CONFIG_CFG80211_CRDA_SUPPORT
 /* Max number of consecutive attempts to communicate with CRDA  */
@@ -581,6 +583,35 @@ static inline int call_crda(const char *alpha2)
 /* code to directly load a firmware database through request_firmware */
 static const struct fwdb_header *regdb;
 
+#if 1
+
+static int load_builtin_regdb_keys(void)
+{
+	return 0;
+}
+
+static void free_regdb_keyring(void)
+{
+}
+
+static int query_regdb_file(const char *alpha2)
+{
+	return -ENOENT;
+}
+
+int reg_reload_regdb(void)
+{
+	return -ENOENT;
+}
+
+int reg_query_regdb_wmm(char *alpha2, int freq, struct ieee80211_reg_rule *rule)
+{
+	return -ENODATA;
+}
+EXPORT_SYMBOL(reg_query_regdb_wmm);
+
+#else /* disabled until we update wireless-regdb */
+
 struct fwdb_country {
 	u8 alpha2[2];
 	__be16 coll_ptr;
@@ -1106,6 +1137,8 @@ int reg_reload_regdb(void)
 	return err;
 }
 
+#endif
+
 static bool reg_query_database(struct regulatory_request *request)
 {
 	if (query_regdb_file(request->alpha2) == 0)
