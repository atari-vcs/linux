From: Christopher Obbard <chris.obbard@collabora.com>
Date: Tue, 14 Jul 2020 13:31:44 +0100
Subject: usb: xhci: workaround CSS timeout setting HCE on AMD SNPS 3.0 xHC

Some AMD SNPS xHC 3.0 controllers do not seem to properly support
saving their state and set the HCE flag instead to indicate that
a reset is required.

Since setting the quirk XHCI_SNPS_BROKEN_SUSPEND causes reset on
wakeup, we can safely ignore this flag if it is set.

Fixes: a7d57abcc8a5 ("xhci: workaround CSS timeout on AMD SNPS 3.0 xHC")
Signed-off-by: Christopher Obbard <chris.obbard@collabora.com>
---
 drivers/usb/host/xhci.c | 14 ++++++++++----
 1 file changed, 10 insertions(+), 4 deletions(-)

diff --git a/drivers/usb/host/xhci.c b/drivers/usb/host/xhci.c
index 9b3b1b1..aad256d 100644
--- a/drivers/usb/host/xhci.c
+++ b/drivers/usb/host/xhci.c
@@ -1036,13 +1036,19 @@ int xhci_suspend(struct xhci_hcd *xhci, bool do_wakeup)
 	 * to see if the xHC clears BIT(8) which never happens
 	 * and driver assumes that controller is not responding
 	 * and times out. To workaround this, its good to check
-	 * if SRE and HCE bits are not set (as per xhci
-	 * Section 5.4.2) and bypass the timeout.
+	 * if the SRE bit is not set (as per xhci Section 5.4.2)
+	 * and bypass the timeout.
+	 *
+	 * Some AMD SNPS xHC 3.0 controllers do not seem to
+	 * properly support saving their state and set the HCE
+	 * flag instead to indicate that a reset is required.
+	 * Since setting the quirk XHCI_SNPS_BROKEN_SUSPEND
+	 * causes reset on wakeup, we can safely ignore this
+	 * flag if it is set.
 	 */
 		res = readl(&xhci->op_regs->status);
 		if ((xhci->quirks & XHCI_SNPS_BROKEN_SUSPEND) &&
-		    (((res & STS_SRE) == 0) &&
-				((res & STS_HCE) == 0))) {
+		    ((res & STS_SRE) == 0)) {
 			xhci->broken_suspend = 1;
 		} else {
 			xhci_warn(xhci, "WARN: xHC save state timeout\n");
