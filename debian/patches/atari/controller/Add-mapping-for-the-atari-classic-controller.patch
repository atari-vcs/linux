From: Sjoerd Simons <sjoerd.simons@collabora.co.uk>
Date: Tue, 28 Jan 2020 17:00:50 +0100
Subject: Add mapping for the atari classic controller

Signed-off-by: Sjoerd Simons <sjoerd.simons@collabora.co.uk>
---
 drivers/hid/hid-atari.c | 68 ++++++++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 65 insertions(+), 3 deletions(-)

diff --git a/drivers/hid/hid-atari.c b/drivers/hid/hid-atari.c
index 1edbdd2..667db8d 100644
--- a/drivers/hid/hid-atari.c
+++ b/drivers/hid/hid-atari.c
@@ -8,16 +8,62 @@
 
 #define map_key(c)	hid_map_usage(hi, usage, bit, max, EV_KEY, (c));
 #define map_abs(c)	hid_map_usage(hi, usage, bit, max, EV_ABS, (c))
+#define map_rel(c)	hid_map_usage(hi, usage, bit, max, EV_REL, (c))
 
-static int atari_mapping(struct hid_device *hdev, struct hid_input *hi,
+static int atari_map_classic(struct hid_device *hdev, struct hid_input *hi,
 		struct hid_field *field, struct hid_usage *usage,
 		unsigned long **bit, int *max)
 {
-	/* Ignore the usage pages other then the first one for now */
-	if (usage->collection_index != 1) {
+	if ((usage->hid & HID_USAGE_PAGE) == HID_UP_BUTTON) {
+		int code = (usage->hid) & HID_USAGE;
+		switch (code) {
+			case 0x1: map_key (BTN_A);
+				return 1;
+			case 0x2: map_key (BTN_B);
+				return 1;
+		}
+		return -1;
+	}
+
+	if ((usage->hid & HID_USAGE_PAGE) == HID_UP_CONSUMER) {
+		int code = usage->hid & HID_USAGE;
+		switch (code) {
+			case 0x040:
+				map_key(BTN_START);
+				return 1;
+			case 0x223:
+				map_key(BTN_MODE);
+				return 1;
+			case 0x224:
+				map_key(BTN_SELECT);
+				return 1;
+		}
+	}
+
+	if ((usage->hid & HID_USAGE_PAGE) == HID_UP_SIMULATION) {
+		return -1;
+	}
+
+	if ((usage->hid & HID_USAGE_PAGE) == HID_UP_GENDESK) {
+		switch (usage->hid) {
+			case HID_GD_HATSWITCH:
+				return 0;
+			case HID_GD_RX:
+				field->flags = HID_MAIN_ITEM_VARIABLE
+					| HID_MAIN_ITEM_RELATIVE;
+				map_rel(REL_X);
+				return 1;
+		}
 		return -1;
 	}
 
+	return 0;
+}
+
+static int atari_map_modern(struct hid_device *hdev, struct hid_input *hi,
+		struct hid_field *field, struct hid_usage *usage,
+		unsigned long **bit, int *max)
+{
 	if ((usage->hid & HID_USAGE_PAGE) == HID_UP_BUTTON) {
 		int code = ((usage->hid - 1) & HID_USAGE);
 		switch (code) {
@@ -75,6 +121,22 @@ static int atari_mapping(struct hid_device *hdev, struct hid_input *hi,
 			return 1;
 	}
 
+	return 0;
+}
+
+static int atari_mapping(struct hid_device *hdev, struct hid_input *hi,
+		struct hid_field *field, struct hid_usage *usage,
+		unsigned long **bit, int *max)
+{
+	/* Ignore the usage pages other then the first one for now */
+	if (usage->collection_index != 1) {
+		return -1;
+	}
+
+	if (hdev->product == USB_DEVICE_ID_ATARI_CLASSIC)
+		return atari_map_classic(hdev, hi, field, usage, bit, max);
+	else
+		return atari_map_modern(hdev, hi, field, usage, bit, max);
 
 	return 0;
 }
